version: '1.0'

# PostgreSQL Database Schema
postgres:
  # User and Authentication (Combined table)
  tables:
    USER_AUTH:
      columns:
        user_pub_key:
          type: VARCHAR(255)
          primary_key: true
          description: "Public key of the user, primary identifier"
        username:
          type: VARCHAR(100)
          nullable: true
          description: "User's display name"
        email:
          type: VARCHAR(255)
          nullable: true
          description: "Optional email for the user"
        chain_id:
          type: VARCHAR(255)
          references: CHAIN_DETAILS.chain_id
          nullable: true
          description: "Reference to the blockchain the user is associated with"
        created_at:
          type: TIMESTAMP
          default: "CURRENT_TIMESTAMP"
          description: "Account creation timestamp"
    
    # Agent Management
    AGENT:
      columns:
        agent_id:
          type: VARCHAR(255)
          primary_key: true
          description: "SHA256 hash of user_public_key and time_created"
        creation_date:
          type: TIMESTAMP
          default: "CURRENT_TIMESTAMP"
          description: "When the agent was created"
        owner:
          type: VARCHAR(255)
          references: USER_AUTH.user_pub_key
          description: "Owner of the agent"
        status:
          type: VARCHAR(20)
          check: "IN ('Active', 'Not Published')"
          nullable: true
          description: "Current status of the agent"
        tags:
          type: JSONB
          nullable: true
          description: "Metadata tags for the agent"
        license:
          type: VARCHAR(100)
          nullable: true
          description: "License information"
        fork:
          type: VARCHAR(64)
          nullable: true
          description: "Reference to forked agent if applicable"
        socials:
          type: JSONB
          nullable: true
          description: "Social media links"
        description:
          type: TEXT
          nullable: true
          description: "Agent description"
        name:
          type: VARCHAR(255)
          description: "Agent name"
        chain_id:
          type: VARCHAR(255)
          references: CHAIN_DETAILS.chain_id
          nullable: true
          description: "Blockchain reference"
    
    UNPUBLISHED_AGENT:
      columns:
        agent_id:
          type: VARCHAR(255)
          primary_key: true
          references: AGENT.agent_id
          description: "References AGENT table"
        last_edited_time:
          type: TIMESTAMP
          default: "CURRENT_TIMESTAMP"
          description: "Timestamp of last modification"
        workflow:
          type: JSONB
          description: "JSON object representing the agent's workflow"
        md5:
          type: VARCHAR(32)
          description: "Hash of the workflow for integrity checking"
    
    PUBLISHED_AGENT:
      columns:
        agent_id:
          type: VARCHAR(255)
          primary_key: true
          references: AGENT.agent_id
          description: "References AGENT table"
        last_edited_time:
          type: TIMESTAMP
          default: "CURRENT_TIMESTAMP"
          description: "Timestamp of last modification"
        workflow:
          type: JSONB
          description: "JSON object representing the agent's workflow"
        md5:
          type: VARCHAR(32)
          description: "Hash of the workflow for integrity checking"
    
    METADATA:
      columns:
        agent_id:
          type: VARCHAR(255)
          primary_key: true
          references: AGENT.agent_id
          description: "References AGENT table"
        markdown_object:
          type: JSONB
          description: "JSON containing markdown documentation"
    
    # Blockchain Integration
    BLOCKCHAIN_AGENT_DATA:
      columns:
        agent_id:
          type: VARCHAR(255)
          primary_key: true
          references: AGENT.agent_id
          description: "References AGENT table"
        version:
          type: VARCHAR(20)
          description: "Version of the agent on blockchain"
        published_date:
          type: TIMESTAMP
          description: "When published to blockchain"
        published_hash:
          type: VARCHAR(255)
          description: "Last updated blockchain hash"
        contract_id:
          type: VARCHAR(255)
          references: CONTRACT_DETAILS.contract_id
          nullable: true
          description: "Smart contract reference"
        nft_id:
          type: VARCHAR(255)
          description: "NFT identifier"
        nft_mint_trx_id:
          type: VARCHAR(255)
          description: "Transaction ID for NFT minting"
        other_data:
          type: JSONB
          nullable: true
          description: "Additional blockchain-related data"
    
    CHAIN_DETAILS:
      columns:
        chain_id:
          type: VARCHAR(255)
          primary_key: true
          description: "Chain identifier"
        chain:
          type: VARCHAR(100)
          description: "Name of the blockchain"
        chain_status:
          type: VARCHAR(50)
          description: "Current status of the chain"
        chain_explorer:
          type: VARCHAR(255)
          description: "URL to blockchain explorer"
    
    CONTRACT_DETAILS:
      columns:
        contract_id:
          type: VARCHAR(255)
          primary_key: true
          description: "Contract identifier"
        chain_id:
          type: VARCHAR(255)
          references: CHAIN_DETAILS.chain_id
          nullable: true
          description: "References CHAIN_DETAILS"
        contract_name:
          type: VARCHAR(100)
          description: "Name of the smart contract"
        contract_version:
          type: VARCHAR(20)
          description: "Version of the contract"
    
    # Access Control
    NFT_ACCESS:
      columns:
        user_id:
          type: VARCHAR(255)
          references: USER_AUTH.user_pub_key
          description: "User with access"
        nft_id:
          type: VARCHAR(255)
          description: "NFT granting access"
        access_level:
          type: INTEGER
          references: ACCESS_LEVEL_TABLE.access_level
          nullable: true
          description: "Permission level"
        timestamp:
          type: TIMESTAMP
          default: "CURRENT_TIMESTAMP"
          description: "When access was granted"
      primary_key: ["user_id", "nft_id"]
    
    ACCESS_LEVEL_TABLE:
      columns:
        access_level:
          type: INTEGER
          primary_key: true
          description: "Primary key, numeric level"
        access_level_name:
          type: VARCHAR(50)
          description: "Name of the access tier"
        descriptions_and_permissions:
          type: JSONB
          description: "Detailed permission descriptions"
    
    # Chat System
    CONVERSATIONS:
      columns:
        conversation_id:
          type: UUID
          primary_key: true
          default: "gen_random_uuid()"
          description: "UUID primary key"
        user_id:
          type: VARCHAR(255)
          references: USER_AUTH.user_pub_key
          description: "References USER_AUTH table"
        title:
          type: VARCHAR(255)
          description: "Conversation title"
        created_at:
          type: TIMESTAMP
          default: "CURRENT_TIMESTAMP"
          description: "When conversation started"
        updated_at:
          type: TIMESTAMP
          default: "CURRENT_TIMESTAMP"
          description: "Last update timestamp"
        agent_id:
          type: VARCHAR(255)
          references: AGENT.agent_id
          nullable: true
          description: "Optional reference to an agent"
    
    MESSAGES:
      columns:
        message_id:
          type: UUID
          primary_key: true
          default: "gen_random_uuid()"
          description: "UUID primary key"
        conversation_id:
          type: UUID
          references: CONVERSATIONS.conversation_id
          description: "References CONVERSATIONS table"
        role:
          type: VARCHAR(10)
          check: "IN ('user', 'assistant')"
          description: "Either 'user' or 'assistant'"
        content:
          type: TEXT
          description: "The message text"
        timestamp:
          type: TIMESTAMP
          default: "CURRENT_TIMESTAMP"
          description: "Message timestamp"
        model:
          type: VARCHAR(100)
          nullable: true
          description: "AI model used for the message"
        parent_message_id:
          type: VARCHAR(255)
          nullable: true
          description: "Links assistant messages to their parent user messages"
        metadata:
          type: JSONB
          nullable: true
          description: "Additional message metadata"
        thinking_state:
          type: JSONB
          nullable: true
          description: "Stores the thinking UI state including execution steps"
        transaction_data:
          type: JSONB
          nullable: true
          description: "Stores proposed blockchain transactions"
      indexes:
        - name: idx_messages_conversation_id
          columns: ["conversation_id"]
        - name: idx_messages_parent_message_id
          columns: ["parent_message_id"]
    
    # Flowbuilder Blocks
    FLOWBUILDER_BLOCKS:
      columns:
        id:
          type: SERIAL
          primary_key: true
          description: "Auto-incremented primary key"
        type:
          type: VARCHAR(255)
          unique: true
          description: "Block type identifier"
        element_id:
          type: VARCHAR(255)
          nullable: true
          description: "Element identifier"
        name:
          type: VARCHAR(255)
          nullable: true
          description: "Block name"
        node_description:
          type: TEXT
          description: "Description of the node"
        description:
          type: TEXT
          nullable: true
          description: "Additional description"
        input_schema:
          type: JSONB
          description: "JSON schema for input validation"
        output_schema:
          type: JSONB
          description: "JSON schema for output validation"
        parameter_schema_structure:
          type: JSONB
          default: "{}"
          description: "Schema structure for parameters"
        parameters:
          type: JSONB
          default: "{}"
          description: "Default parameters"
        processing_message:
          type: TEXT
          nullable: true
          description: "Message shown during processing"
        tags:
          type: JSONB
          default: "[]"
          description: "Tags for categorization"
        layer:
          type: VARCHAR(100)
          nullable: true
          description: "Layer information"
        hyperparameters:
          type: JSONB
          default: "{}"
          description: "Hyperparameters configuration"
        input_data:
          type: JSONB
          nullable: true
          description: "Input data structure"
        output_data:
          type: JSONB
          nullable: true
          description: "Output data structure"
        code:
          type: TEXT
          nullable: true
          description: "Code content for custom blocks"
        flow_control:
          type: JSONB
          nullable: true
          description: "Flow control configuration"
        icon:
          type: VARCHAR(100)
          description: "Icon identifier"
        category:
          type: VARCHAR(100)
          description: "Block category"
        created_at:
          type: TIMESTAMP
          default: "CURRENT_TIMESTAMP"
          description: "Creation timestamp"
        updated_at:
          type: TIMESTAMP
          default: "CURRENT_TIMESTAMP"
          description: "Last update timestamp"
      indexes:
        - name: idx_flowbuilder_blocks_category
          columns: ["category"]
        - name: idx_flowbuilder_blocks_type
          columns: ["type"]
    
    # Salt Email Table
    SALT_EMAIL:
      columns:
        email:
          type: VARCHAR(255)
          primary_key: true
          description: "Email address"
        salt:
          type: VARCHAR(255)
          description: "Salt for password hashing"
        created_at:
          type: TIMESTAMP
          default: "CURRENT_TIMESTAMP"
          description: "Creation timestamp"

# Redis Database Schema
redis:
  # Session Management
  keys:
    USER_SESSION:
      key_pattern: "user_session:jwt:{token}"  # Changed from user_id to token
      type: hash
      fields:
        - name: user_id
          description: "User identifier"
        - name: session_id
          description: "Session token"
      ttl: 86400  # 24 hours in seconds
    
    # Real-time Workflow Editing
    WORKFLOW_LIVE_EDITOR:
      key_pattern: "workflow_live_editor:{agent_id}"
      type: hash
      fields:
        - name: agent_id
          description: "Key identifying the agent being edited"
        - name: workflow
          description: "JSON object of the workflow being edited"
        - name: last_updated
          description: "Timestamp of last update"
      ttl: 3600  # 1 hour in seconds, reset on update

# Synchronization System
synchronization:
  schedule_interval_seconds: 60  # Run every minute
  sync_conditions:
    - key_pattern: "workflow_live_editor:*"
      idle_time_seconds: 120  # 2 minutes of no updates
  actions:
    - type: "sync_to_postgres"
      source: "redis:WORKFLOW_LIVE_EDITOR"
      destination: "postgres:UNPUBLISHED_AGENT"
      fields_mapping:
        workflow: workflow
      additional_updates:
        last_edited_time: "CURRENT_TIMESTAMP"
        md5: "MD5(workflow)"